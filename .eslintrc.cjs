module.exports = {
    root: true,
    env: { browser: true, es2020: true },
    extends: [
        'airbnb',
        'plugin:@typescript-eslint/stylistic-type-checked',
        'airbnb/hooks',
        'airbnb/whitespace',
        'airbnb-typescript',
        'prettier',
    ],
    ignorePatterns: ['dist', '.eslintrc.cjs', 'node_modules', 'vite.config.ts', 'postcss.config.cjs'],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
        project: ['./tsconfig.json', './tsconfig.node.json'],
        tsconfigRootDir: __dirname,
    },
    plugins: ['react-refresh', '@typescript-eslint'],

    rules: {
        'react-refresh/only-export-components': ['warn', { allowConstantExport: true }],
        'import/no-absolute-path': 'off',
        '@typescript-eslint/dot-notation': 'off',
        'import/no-default-export': 'error',
        'import/prefer-default-export': 'off',
        quotes: ['warn', 'single', { avoidEscape: true }],
        'react/react-in-jsx-scope': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/require-default-props': 'off',
        'react/style-prop-object': [
            'warn',
            {
                allow: ['StatusBar'],
            },
        ],
        'max-len': [
            'warn',
            120,
            2,
            {
                ignoreUrls: true,
                ignoreComments: false,
                ignoreRegExpLiterals: true,
                ignoreStrings: true,
                ignoreTemplateLiterals: true,
            },
        ],
        'class-methods-use-this': 0,
        '@typescript-eslint/prefer-nullish-coalescing': 'off',
        '@typescript-eslint/consistent-type-definitions': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
        '@typescript-eslint/no-unnecessary-type-assertion': 'error',
        '@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
        '@typescript-eslint/prefer-includes': 'error',
        '@typescript-eslint/prefer-ts-expect-error': 'error',
    },
};
